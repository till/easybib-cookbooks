<%= render_upstream(@php_upstream, @upstream_name) -%>

<% 
alias_config = ::StackEasyBib::Helpers.merge_alias_config(node, @app_dir)
-%>
<%= render 'partials/module-assets.erb',
  :cookbook => 'nginx-app',
  :variables => {
    :alias_map => alias_config,
    :default_docroot => @doc_root
  }
-%>

server {
    listen 80 <%=@listen_opts%>;

    access_log <%= @access_log %>;

<% if @nginx_extra -%>
    <%= @nginx_extra -%>
<% end -%>

<% if @domain_name -%>
    server_name <%=@domain_name%>;
<% end -%>

    client_max_body_size <%= node['nginx-app']['client_max_body_size'] %>;

    # Block ad calls to /something/<script type="text/javascript">
    location ~* <script {
        deny all;
    }

    root $easybib_docroot;

    # VAST tag location for serving video
    location /vmntribes-vast-tag/ {
        proxy_pass "http://www.burstnet.com/burstmedia/display/s=27759/a=e/v=4.0S/sz=0x0V/NZ/SA/9870197013/K=videopair/RETURN-CODE/TXT/";
        proxy_set_header Host "www.burstnet.com";
        proxy_connect_timeout 5s;
        proxy_read_timeout 5s;
        proxy_send_timeout 5s;
    }

<%= render "partials/silence-notfound.erb", :cookbook => "nginx-app" -%>

<%= render "partials/status-checks.erb",
  :cookbook => "nginx-app",
  :variables => {
    :health_check => 'health_check.php',
    :upstream => @upstream_name
  }
-%>

<%
uncached_extensions = NginxApp::Helpers::uncached_static_extensions(node['nginx-app']['browser_caching'], node['stack-easybib']['static_extensions'])
unless uncached_extensions.empty? -%>
    location ~* \.(<%= uncached_extensions.join('|') %>)$ {
        # Prevent static content to be handled by php
        # See easybib/issues#417
        add_header Access-Control-Allow-Origin *;
    }
<% end -%>

    location /raw/ {
        # Prevent any content in /raw/
        # See easybib/issues#4837
        add_header Access-Control-Allow-Origin *;
    }

    location /crossdomain.xml {
        add_header Access-Control-Allow-Origin *;
    }

<% unless node['nginx-app']['browser_caching'].nil? -%>
  <%= render 'partials/browser-caching.erb',
    :cookbook => 'nginx-app',
    :variables => {
      :enabled => node['nginx-app']['browser_caching']['enabled'],
      :config => node['nginx-app']['browser_caching']['config']
    }
  %>
<% end -%>

<% unless @nginx_local_conf.nil? -%>
<%= render @nginx_local_conf, :local => true %>
<% end -%>

<%
@environment = EasyBib.get_cluster_name(node)
%>
    location / {
        include <%=node['nginx-app']['config_dir']%>/fastcgi_params;

        fastcgi_pass  <%= @app_name %>_phpfpm;
        fastcgi_index index.php;

    <% unless @environment.empty? -%>
        fastcgi_param BIB_ENV "<%=@environment%>";
    <% end -%>
        fastcgi_param SCRIPT_FILENAME $document_root/index.php;

        index  index.php index.html index.htm;
    }
}
