<%= render_upstream(@php_upstream, @upstream_name) %>

server {
    listen 80 <%=@listen_opts%>;

  <% if @nginx_extra -%>
    <%= @nginx_extra -%>
  <% end -%>

  client_max_body_size <%= fetch_node(node, @app_name, 'nginx-app', 'client_max_body_size') %>;

  <% unless @nginx_local_conf.nil? -%>
  <%= render @nginx_local_conf, :local => true %>
  <% end -%>

  <% if !@domain_name.nil? && !@domain_name.empty? -%>
      server_name <%=@domain_name%>;
  <% end -%>

    root <%= @doc_root %>;

<%= render "partials/silence-notfound.erb", :cookbook => "nginx-app" -%>

<%= render "partials/status-checks.erb", :cookbook => 'nginx-app', :variables => {
        "upstream" => @upstream_name,
        "health_check" => @health_check
    } %>
    <% if @routes_enabled.nil? || @routes_enabled.empty? -%>
<%= render "partials/php-routes-default.erb", :cookbook => 'nginx-app', :variables => {
        "php_bypass_static_content" => true,
        "routes_enabled" => @routes_enabled,
        "upstream" => @upstream_name,
        "env_conf" => @env_conf,
        "access_log" => @access_log,
        "default_router" => @default_router,
        "node" => @node
    } %>
    <% else -%>
<%= render "partials/php-routes-specific-routes.erb", :cookbook => 'nginx-app', :variables => {
        "php_bypass_static_content" => true,
        "routes_enabled" => @routes_enabled,
        "upstream" => @upstream_name,
        "env_conf" => @env_conf,
        "access_log" => @access_log,
        "default_router" => @default_router,
        "node" => @node
    } %>
    <% end %>

    <% if !@routes_denied.nil? && !@routes_denied.empty? -%>
<%= render "partials/routes-denied.erb", :cookbook => 'nginx-app'  %>
    <% end %>
}
