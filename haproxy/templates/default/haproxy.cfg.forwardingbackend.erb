<%
# rise - number of successful checks to determine if the backend is 'up'
if !@haproxy_rise.nil?
  haproxy_rise = @haproxy_rise
else
  haproxy_rise = 2
end

# fall - number of failed checks to determine if the backend is down
if !@haproxy_fall.nil?
  haproxy_fall = @haproxy_fall
else
  haproxy_fall = 3
end

# in milliseconds - 10 seconds is too slow
haproxy_check_interval = 3000
if !@haproxy_check_interval.nil?
  haproxy_check_interval = @haproxy_check_interval
end

# max connections
haproxy_maxconn = 255

if @health_check.is_a?(Hash)
    health_check_string = "GET #{@health_check['url']} HTTP/1.1\\r\\nHost:\\ #{@health_check['host']}"
else
    health_check_string = @health_check
end

-%>

backend <%= @layername %>_forward
  balance roundrobin
  <%if !@http_set_host.nil? -%>
  http-request set-header Host <%= @http_set_host %>
  http-request del-header Authorization
  <% end -%>
  <%if !@http_set_path.nil? && !@http_match_path.nil? -%>
  # this is for 1.5
  reqirep ^([^\ ]*)\ <%= @http_match_path %>\ (.*)$ \1\ <%= @http_set_path %>\ \2
  # this is for 1.6 and above: http-request set-path <%= @http_set_path %>
  <% end -%>
  option httpchk <%= health_check_string %>
  <% @servers.each do |name,host| -%>
  server <%= name %> <%= host %>:80 weight 10 maxconn <%= haproxy_maxconn %> rise <%= haproxy_rise %> fall <%= haproxy_fall %> check inter <%= haproxy_check_interval %>
<% end -%>

