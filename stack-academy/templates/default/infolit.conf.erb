<%= render_upstream(@php_upstream, 'infolit') %>

<% if ::EasyBib.is_aws(node) -%>

server {
    listen 80 <%=@listen_opts%>;
    return 301 https://<%=node['infolit']['domain']%>$request_uri;
}

<% end -%>

server {

<% if ::EasyBib.is_aws(node) -%>
    listen 443;

    ssl                       on;
    ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
    ssl_certificate           /etc/nginx/ssl/cert.combined.pem;
    ssl_certificate_key       /etc/nginx/ssl/cert.key;
    ssl_ciphers               HIGH:!RC4:!eNULL:!aNULL:!MD5@STRENGTH;
    ssl_prefer_server_ciphers on;
<% else -%>
    listen 80;
<% end -%>

<% if @nginx_extra -%>
    <%= @nginx_extra -%>
<% end -%>

    root <%= @doc_root %>;

    <%= render 'partials/status-checks.erb',
      :cookbook => 'nginx-app',
      :variables => {
        :access_log => @access_log,
        :health_check => "health_check.php",
        :upstream => 'infolit'
      }
    %>

    rewrite ^(/favicon.ico)$ /static/images/favicon.ico;

<% unless @nginx_local_conf.nil? -%>
<%= render @nginx_local_conf, :local => true %>
<% end -%>

<% ['js', 'images', 'css'].each do |route_name| -%>
    location /<%=route_name%>/ {
        alias      <%= @app_dir %>app/modules/infolit/www/<%=route_name%>/;
        access_log <%= @access_log %>;
        add_header Access-Control-Allow-Origin *;
    }
<% end -%>

<% unless node['nginx-app']['browser_caching'].nil? -%>
    <%= render 'partials/browser-caching.erb',
      :cookbook => 'nginx-app',
      :variables => {
        :enabled => node['nginx-app']['browser_caching']['enabled'],
        :config => node['nginx-app']['browser_caching']['config']
      }
    %>
<% end -%>

    location /static/ {
    <% if node['opsworks'] -%>
        expires    30d;
        add_header Pragma public;
        add_header Cache-Control "public";
        alias      <%= @app_dir %>app/modules/infolit/www-build/static/;
    <% else -%>
        alias      <%= @app_dir %>app/modules/infolit/www-src/static/;
    <% end -%>
        access_log <%= @access_log %>;
        add_header Access-Control-Allow-Origin *;
    }

    <%= render 'partials/php-fpm.erb',
      :cookbook => 'nginx-app',
      :variables => {
        :index => 'index.php',
        :location => '/'
      }
    %>

    index index.html index.php ;

    location ~ \.php {

      access_log <%=@access_log%>;
      include    <%=node['nginx-app']['config_dir']%>/fastcgi_params;

      fastcgi_pass  infolit_phpfpm;
      fastcgi_index index.php;

  <% if !@environment.nil? && !@environment.empty? -%>
      fastcgi_param BIB_ENV "<%=@environment%>";
  <% end -%>
<% if ::EasyBib.is_aws(node) -%>
      fastcgi_param HTTPS on;
<% end -%>
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
}
